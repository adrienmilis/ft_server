-----------------------------------------
LEMP Stack (Linux, Nginx, MySQL, PHP)
-----------------------------------------
https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-ubuntu-18-04
good set of videos : https://www.youtube.com/watch?v=ZyQRqa8I6bU

-----
NGINX
-----
# service nginx status (to know if it's running)
# apt install net-tools (install netstat after running update)
# netstat -tupnl (to know what ports are listening)
# service nginx restart (restart nginx)
# service --status-all (see running services)

main nginx configuration directory : conf.d --> individual site configurations can be stored
to work with php-fpm : set the same as in listen /etc/php/7.3/fpm/pool.d/www.conf (/run/php/php7.3-fpm.sock)
!!! service php7.3-fpm start to start the service and generate the file !!!

https://www.linode.com/docs/guides/how-to-configure-nginx/
wordpress : https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
php : https://www.thegeekstuff.com/2013/12/nginx-php-fpm/ OR https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mariadb-php-lemp-stack-on-debian-10

-------
MariaDB
-------
# apt-get -y install mariadb-server mariadb-client

https://computingforgeeks.com/how-to-install-mariadb-on-debian/
What ? Database management system
You install a server on your machine and the applications are clients that talk to this server (retrieve or store information in the database)
Create a MariaDB user to use with phpmyadmin

# /etc/init.d/mysql start (starting mariaDB database)

---
PHP
---

/etc/php/7.3/fpm/php.ini --> set pathinfo to 0 (necessaire ? pq pas)

----------
phpMyAdmin
----------

https://phoenixnap.com/kb/how-to-install-phpmyadmin-on-debian-10

- "phpMyAdmin est une interface web en PHP pour administrer Ã  distance les SGBD MySQL et MariaDB."
- "phpMyAdmin was created so that users can interact with MySQL through an intuitive web interface, running alongside a PHP development environment."
- "before installing PHP My admin, you need to configure the MariaDB database"

need a configuration file for phpMyAdmin !! Add afterwards
(/var/www/html/phpmyadmin/config.inc.php)

# apt-get install -y wget
# rm -rf /var/libs/apt/lists/*
# wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz
# mkdir -p /var/www/html/phpmyadmin # -p creates all the directories even if they don't exist
# tar -xf phpMyAdmin-latest-all-languages.tar.gz --strip-components=1 -C /var/www/html/phpmyadmin
-x : extract
-f : file
# rm -rf phpMyAdmin-latest-all-languages.tar.gz
### ADD CONFIG FILE, CHMOD, CHOWN (for nginx to be able to access) (see docker file)

---------
Wordpress
---------

https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-lemp-nginx-mariadb-and-php-on-debian-10

# wget http://wordpress.org/latest.tar.gz
# mkdir /var/www/html/wordpress
# tar -xf latest.tar.gz -C /var/www/html/
# rm -rf latest.tar.gz
# chown -R www-data:www-data /var/www/html/wordpress
# apt-get install -y php-gd php-curl php-ssh2
# cp wp-config-sample.php wp-config.php

what he does for the database : 
	- CREATE DATABASE wordpress;
	- CREATE USER wpuser@localhost IDENTIFIED BY 'wpuserpass';
	- GRANT ALL PRIVILEGES ON wordpress.* TO wpuser@localhost; (.* is all tables in this database)
	- FLUSH PRIVILEGES; (enabling the changes to take effect without restarting mysql service)

--> possible avec un fichier .sql
# mysql < mysql_createdb.sql
then added config file

---
SSL
---
what is SSL ? (good resource) : https://www.cloudflare.com/learning/ssl/what-is-ssl/
install SSL certificate (pb too much) : https://www.digitalocean.com/community/tutorials/openssl-essentials-working-with-ssl-certificates-private-keys-and-csrs
self-signed SSL : https://codingwithmanny.medium.com/configure-self-signed-ssl-for-nginx-docker-from-a-scratch-7c2bcd5478c6
avec un vrai domaine : https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-debian-10

openssl deja installe de base on dirait

# openssl req -x509 -nodes -days 365 -subj "/C=BE/ST=BXL/O=19, Inc./CN=localhost" -addext "subjectAltName=DNS:localhost" -newkey rsa:2048 -keyout /etc/ssl/private/nginx-selfsigned.key -out /etc/ssl/certs/nginx-selfsigned.crt;

req -x509 : self-signed certificate
-nodes : no passphrase so nginx can read it
-days 365 : 365 days
-subj : specify info without filling prompts
-addext : to make the certificate valid for browser and local machine
- newkey rsa:2048 : new certificate & new key with RSA key of 2048 bits
-keyout : location of the output .key file
-out : location of the output .crt file



















